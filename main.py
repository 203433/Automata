from array import array
import tkinter as tk
from getData import getDataTxt
from getData import getPracticas
from automata.fa.dfa import DFA
# DFA which matches all binary strings ending in an odd number of '1's

dfaValor = DFA(
    allow_partial = True,
    states={'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10', 'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21', 'q22', 'q23', 'q24', 'q25', 'q26', 'q27', 'q28', 'q29', 'q30'},
    input_symbols={'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'},
    transitions={
        'q0': {'i': 'q1', 's': 'q3', 'l': 'q7', 'd': 'q10', 'b': 'q15', 'f': 'q23', 'c': 'q27'},
        'q1': {'n': 'q2'},
        'q2': {'t': 'q30'},
        'q3': {'h': 'q4'},
        'q4': {'o': 'q5'},
        'q5': {'r': 'q6'},
        'q6': {'t': 'q30'},
        'q7': {'o': 'q8'},
        'q8': {'n': 'q9'},
        'q9': {'g': 'q30'},
        'q10': {'o': 'q11'},
        'q11': {'u': 'q12'},
        'q12': {'b': 'q13'},
        'q13': {'l': 'q14'},
        'q14': {'e': 'q30'},
        'q15': {'y': 'q16', 'o': 'q18'},
        'q16': {'t': 'q17'},
        'q17': {'e': 'q18'},
        'q18': {'o': 'q19'},
        'q19': {'l': 'q20'},
        'q20': {'e': 'q21'},
        'q21': {'a': 'q22'},
        'q22': {'n': 'q30'},
        'q23': {'l': 'q24'},
        'q24': {'o': 'q25'},
        'q25': {'a': 'q26'},
        'q26': {'t': 'q30'},
        'q27': {'h': 'q28'},
        'q28': {'a': 'q29'},
        'q29': {'r': 'q30'},
        'q30': {}
    },
    initial_state='q0',
    final_states={'q30'}
)

dfaResevadas = DFA(
    allow_partial = True,
    states={'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10', 'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21'},
    input_symbols={'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ';'},
    transitions={
        'q0': {'c': 'q1', 'n': 'q6', 't': 'q8', 'f': 'q9', 'i': 'q11', 'd': 'q13', 'v': 'q14', 'e': 'q17'},
        'q1': {'a': 'q2', 'h': 'q4'},
        'q2': {'s': 'q3'},
        'q3': {'e': 'q20'},
        'q4': {'a': 'q5'},
        'q5': {'r': 'q20'},
        'q6': {'e': 'q7'},
        'q7': {'w': 'q20'},
        'q8': {'o': 'q20'},
        'q9': {'o': 'q10'},
        'q10': {'r': 'q20'},
        'q11': {'f': 'q20', 'n': 'q12'},
        'q12': {'t': 'q20'},
        'q13': {'o': 'q20'},
        'q14': {'o': 'q15'},
        'q15': {'i': 'q16'},
        'q16': {'d': 'q20'},
        'q17': {'l': 'q18'},
        'q18': {'s': 'q19'},
        'q19': {'e': 'q20'},
        'q20': {';': 'q21'},
        'q21': {}
    },
    initial_state='q0',
    final_states={'q20', 'q21'}
)

dfaIdentificador = DFA(
    allow_partial = True,
    states={'q0', 'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10', 'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21', 'q22', 'q23', 'q24', 'q25', 'q26', 'q27', 'q28', 'q29', 'q30', 'q31', 'q32', 'q33', 'q34', 'q35', 'q36', 'q37', 'q38', 'q39', 'q40'},
    input_symbols={';','1', '2' , '3', '4', '5', '6', '7', '8', '9', '0', '_',  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'},
    transitions={
        'q0': {'_': 'q1', 'a': 'q1', 'b': 'q1', 'c': 'q1', 'd': 'q1', 'e': 'q1', 'f': 'q1', 'g': 'q1', 'h': 'q1', 'i': 'q1', 'j': 'q1', 'k': 'q1', 'l': 'q1', 'm': 'q1', 'n': 'q1', 'o': 'q1', 'p': 'q1', 'q': 'q1', 'r': 'q1', 's': 'q1', 't': 'q1', 'u': 'q1', 'v': 'q1', 'w': 'q1', 'x': 'q1', 'y': 'q1', 'z': 'q1'},
        'q1': {'_': 'q3', 'a': 'q3', 'b': 'q3', 'c': 'q3', 'd': 'q3', 'e': 'q3', 'f': 'q3', 'g': 'q3', 'h': 'q3', 'i': 'q3', 'j': 'q3', 'k': 'q3', 'l': 'q3', 'm': 'q3', 'n': 'q3', 'o': 'q3', 'p': 'q3', 'q': 'q3', 'r': 'q3', 's': 'q3', 't': 'q3', 'u': 'q3', 'v': 'q3', 'w': 'q3', 'x': 'q3', 'y': 'q3', 'z': 'q3', 'A': 'q3', 'B': 'q3', 'C': 'q3', 'D': 'q3', 'E': 'q3', 'F': 'q3', 'G': 'q3', 'H': 'q3', 'I': 'q3', 'J': 'q3', 'K': 'q3', 'L': 'q3', 'M': 'q3', 'N': 'q3', 'O': 'q3', 'P': 'q3', 'Q': 'q3', 'R': 'q3', 'S': 'q3', 'T': 'q3', 'U': 'q3', 'V': 'q3', 'W': 'q3', 'X': 'q3', 'Y': 'q3', 'Z': 'q3', '1': 'q3', '2': 'q3', '3': 'q3', '4': 'q3', '5': 'q3', '6': 'q3', '7': 'q3', '8': 'q3', '9': 'q3', '0': 'q3', ';': 'q2'},
        'q2': {},
        'q3': {'_': 'q5', 'a': 'q5', 'b': 'q5', 'c': 'q5', 'd': 'q5', 'e': 'q5', 'f': 'q5', 'g': 'q5', 'h': 'q5', 'i': 'q5', 'j': 'q5', 'k': 'q5', 'l': 'q5', 'm': 'q5', 'n': 'q5', 'o': 'q5', 'p': 'q5', 'q': 'q5', 'r': 'q5', 's': 'q5', 't': 'q5', 'u': 'q5', 'v': 'q5', 'w': 'q5', 'x': 'q5', 'y': 'q5', 'z': 'q5', 'A': 'q5', 'B': 'q5', 'C': 'q5', 'D': 'q5', 'E': 'q5', 'F': 'q5', 'G': 'q5', 'H': 'q5', 'I': 'q5', 'J': 'q5', 'K': 'q5', 'L': 'q5', 'M': 'q5', 'N': 'q5', 'O': 'q5', 'P': 'q5', 'Q': 'q5', 'R': 'q5', 'S': 'q5', 'T': 'q5', 'U': 'q5', 'V': 'q5', 'W': 'q5', 'X': 'q5', 'Y': 'q5', 'Z': 'q5', '1': 'q5', '2': 'q5', '3': 'q5', '4': 'q5', '5': 'q5', '6': 'q5', '7': 'q5', '8': 'q5', '9': 'q5', '0': 'q5', ';': 'q4'},
        'q4': {},
        'q5': {'_': 'q7', 'a': 'q7', 'b': 'q7', 'c': 'q7', 'd': 'q7', 'e': 'q7', 'f': 'q7', 'g': 'q7', 'h': 'q7', 'i': 'q7', 'j': 'q7', 'k': 'q7', 'l': 'q7', 'm': 'q7', 'n': 'q7', 'o': 'q7', 'p': 'q7', 'q': 'q7', 'r': 'q7', 's': 'q7', 't': 'q7', 'u': 'q7', 'v': 'q7', 'w': 'q7', 'x': 'q7', 'y': 'q7', 'z': 'q7', 'A': 'q7', 'B': 'q7', 'C': 'q7', 'D': 'q7', 'E': 'q7', 'F': 'q7', 'G': 'q7', 'H': 'q7', 'I': 'q7', 'J': 'q7', 'K': 'q7', 'L': 'q7', 'M': 'q7', 'N': 'q7', 'O': 'q7', 'P': 'q7', 'Q': 'q7', 'R': 'q7', 'S': 'q7', 'T': 'q7', 'U': 'q7', 'V': 'q7', 'W': 'q7', 'X': 'q7', 'Y': 'q7', 'Z': 'q7', '1': 'q7', '2': 'q7', '3': 'q7', '4': 'q7', '5': 'q7', '6': 'q7', '7': 'q7', '8': 'q7', '9': 'q7', '0': 'q7', ';': 'q6'},
        'q6': {},
        'q7': {'_': 'q9', 'a': 'q9', 'b': 'q9', 'c': 'q9', 'd': 'q9', 'e': 'q9', 'f': 'q9', 'g': 'q9', 'h': 'q9', 'i': 'q9', 'j': 'q9', 'k': 'q9', 'l': 'q9', 'm': 'q9', 'n': 'q9', 'o': 'q9', 'p': 'q9', 'q': 'q9', 'r': 'q9', 's': 'q9', 't': 'q9', 'u': 'q9', 'v': 'q9', 'w': 'q9', 'x': 'q9', 'y': 'q9', 'z': 'q9', 'A': 'q9', 'B': 'q9', 'C': 'q9', 'D': 'q9', 'E': 'q9', 'F': 'q9', 'G': 'q9', 'H': 'q9', 'I': 'q9', 'J': 'q9', 'K': 'q9', 'L': 'q9', 'M': 'q9', 'N': 'q9', 'O': 'q9', 'P': 'q9', 'Q': 'q9', 'R': 'q9', 'S': 'q9', 'T': 'q9', 'U': 'q9', 'V': 'q9', 'W': 'q9', 'X': 'q9', 'Y': 'q9', 'Z': 'q9', '1': 'q9', '2': 'q9', '3': 'q9', '4': 'q9', '5': 'q9', '6': 'q9', '7': 'q9', '8': 'q9', '9': 'q9', '0': 'q9', ';': 'q8'},
        'q8': {},
        'q9': {'_': 'q11', 'a': 'q11', 'b': 'q11', 'c': 'q11', 'd': 'q11', 'e': 'q11', 'f': 'q11', 'g': 'q11', 'h': 'q11', 'i': 'q11', 'j': 'q11', 'k': 'q11', 'l': 'q11', 'm': 'q11', 'n': 'q11', 'o': 'q11', 'p': 'q11', 'q': 'q11', 'r': 'q11', 's': 'q11', 't': 'q11', 'u': 'q11', 'v': 'q11', 'w': 'q11', 'x': 'q11', 'y': 'q11', 'z': 'q11', 'A': 'q11', 'B': 'q11', 'C': 'q11', 'D': 'q11', 'E': 'q11', 'F': 'q11', 'G': 'q11', 'H': 'q11', 'I': 'q11', 'J': 'q11', 'K': 'q11', 'L': 'q11', 'M': 'q11', 'N': 'q11', 'O': 'q11', 'P': 'q11', 'Q': 'q11', 'R': 'q11', 'S': 'q11', 'T': 'q11', 'U': 'q11', 'V': 'q11', 'W': 'q11', 'X': 'q11', 'Y': 'q11', 'Z': 'q11', '1': 'q11', '2': 'q11', '3': 'q11', '4': 'q11', '5': 'q11', '6': 'q11', '7': 'q11', '8': 'q11', '9': 'q11', '0': 'q11', ';': 'q10'},
        'q10': {},
        'q11': {'_': 'q13', 'a': 'q13', 'b': 'q13', 'c': 'q13', 'd': 'q13', 'e': 'q13', 'f': 'q13', 'g': 'q13', 'h': 'q13', 'i': 'q13', 'j': 'q13', 'k': 'q13', 'l': 'q13', 'm': 'q13', 'n': 'q13', 'o': 'q13', 'p': 'q13', 'q': 'q13', 'r': 'q13', 's': 'q13', 't': 'q13', 'u': 'q13', 'v': 'q13', 'w': 'q13', 'x': 'q13', 'y': 'q13', 'z': 'q13', 'A': 'q13', 'B': 'q13', 'C': 'q13', 'D': 'q13', 'E': 'q13', 'F': 'q13', 'G': 'q13', 'H': 'q13', 'I': 'q13', 'J': 'q13', 'K': 'q13', 'L': 'q13', 'M': 'q13', 'N': 'q13', 'O': 'q13', 'P': 'q13', 'Q': 'q13', 'R': 'q13', 'S': 'q13', 'T': 'q13', 'U': 'q13', 'V': 'q13', 'W': 'q13', 'X': 'q13', 'Y': 'q13', 'Z': 'q13', '1': 'q13', '2': 'q13', '3': 'q13', '4': 'q13', '5': 'q13', '6': 'q13', '7': 'q13', '8': 'q13', '9': 'q13', '0': 'q13', ';': 'q12'},
        'q12': {},
        'q13': {'_': 'q15', 'a': 'q15', 'b': 'q15', 'c': 'q15', 'd': 'q15', 'e': 'q15', 'f': 'q15', 'g': 'q15', 'h': 'q15', 'i': 'q15', 'j': 'q15', 'k': 'q15', 'l': 'q15', 'm': 'q15', 'n': 'q15', 'o': 'q15', 'p': 'q15', 'q': 'q15', 'r': 'q15', 's': 'q15', 't': 'q15', 'u': 'q15', 'v': 'q15', 'w': 'q15', 'x': 'q15', 'y': 'q15', 'z': 'q15', 'A': 'q15', 'B': 'q15', 'C': 'q15', 'D': 'q15', 'E': 'q15', 'F': 'q15', 'G': 'q15', 'H': 'q15', 'I': 'q15', 'J': 'q15', 'K': 'q15', 'L': 'q15', 'M': 'q15', 'N': 'q15', 'O': 'q15', 'P': 'q15', 'Q': 'q15', 'R': 'q15', 'S': 'q15', 'T': 'q15', 'U': 'q15', 'V': 'q15', 'W': 'q15', 'X': 'q15', 'Y': 'q15', 'Z': 'q15', '1': 'q15', '2': 'q15', '3': 'q15', '4': 'q15', '5': 'q15', '6': 'q15', '7': 'q15', '8': 'q15', '9': 'q15', '0': 'q15', ';': 'q14'},
        'q14': {},
        'q15': {'_': 'q17', 'a': 'q17', 'b': 'q17', 'c': 'q17', 'd': 'q17', 'e': 'q17', 'f': 'q17', 'g': 'q17', 'h': 'q17', 'i': 'q17', 'j': 'q17', 'k': 'q17', 'l': 'q17', 'm': 'q17', 'n': 'q17', 'o': 'q17', 'p': 'q17', 'q': 'q17', 'r': 'q17', 's': 'q17', 't': 'q17', 'u': 'q17', 'v': 'q17', 'w': 'q17', 'x': 'q17', 'y': 'q17', 'z': 'q17', 'A': 'q17', 'B': 'q17', 'C': 'q17', 'D': 'q17', 'E': 'q17', 'F': 'q17', 'G': 'q17', 'H': 'q17', 'I': 'q17', 'J': 'q17', 'K': 'q17', 'L': 'q17', 'M': 'q17', 'N': 'q17', 'O': 'q17', 'P': 'q17', 'Q': 'q17', 'R': 'q17', 'S': 'q17', 'T': 'q17', 'U': 'q17', 'V': 'q17', 'W': 'q17', 'X': 'q17', 'Y': 'q17', 'Z': 'q17', '1': 'q17', '2': 'q17', '3': 'q17', '4': 'q17', '5': 'q17', '6': 'q17', '7': 'q17', '8': 'q17', '9': 'q17', '0': 'q17', ';': 'q16'},
        'q16': {},
        'q17': {'_': 'q19', 'a': 'q19', 'b': 'q19', 'c': 'q19', 'd': 'q19', 'e': 'q19', 'f': 'q19', 'g': 'q19', 'h': 'q19', 'i': 'q19', 'j': 'q19', 'k': 'q19', 'l': 'q19', 'm': 'q19', 'n': 'q19', 'o': 'q19', 'p': 'q19', 'q': 'q19', 'r': 'q19', 's': 'q19', 't': 'q19', 'u': 'q19', 'v': 'q19', 'w': 'q19', 'x': 'q19', 'y': 'q19', 'z': 'q19', 'A': 'q19', 'B': 'q19', 'C': 'q19', 'D': 'q19', 'E': 'q19', 'F': 'q19', 'G': 'q19', 'H': 'q19', 'I': 'q19', 'J': 'q19', 'K': 'q19', 'L': 'q19', 'M': 'q19', 'N': 'q19', 'O': 'q19', 'P': 'q19', 'Q': 'q19', 'R': 'q19', 'S': 'q19', 'T': 'q19', 'U': 'q19', 'V': 'q19', 'W': 'q19', 'X': 'q19', 'Y': 'q19', 'Z': 'q19', '1': 'q19', '2': 'q19', '3': 'q19', '4': 'q19', '5': 'q19', '6': 'q19', '7': 'q19', '8': 'q19', '9': 'q19', '0': 'q19', ';': 'q18'},
        'q18': {},
        'q19': {'_': 'q21', 'a': 'q21', 'b': 'q21', 'c': 'q21', 'd': 'q21', 'e': 'q21', 'f': 'q21', 'g': 'q21', 'h': 'q21', 'i': 'q21', 'j': 'q21', 'k': 'q21', 'l': 'q21', 'm': 'q21', 'n': 'q21', 'o': 'q21', 'p': 'q21', 'q': 'q21', 'r': 'q21', 's': 'q21', 't': 'q21', 'u': 'q21', 'v': 'q21', 'w': 'q21', 'x': 'q21', 'y': 'q21', 'z': 'q21', 'A': 'q21', 'B': 'q21', 'C': 'q21', 'D': 'q21', 'E': 'q21', 'F': 'q21', 'G': 'q21', 'H': 'q21', 'I': 'q21', 'J': 'q21', 'K': 'q21', 'L': 'q21', 'M': 'q21', 'N': 'q21', 'O': 'q21', 'P': 'q21', 'Q': 'q21', 'R': 'q21', 'S': 'q21', 'T': 'q21', 'U': 'q21', 'V': 'q21', 'W': 'q21', 'X': 'q21', 'Y': 'q21', 'Z': 'q21', '1': 'q21', '2': 'q21', '3': 'q21', '4': 'q21', '5': 'q21', '6': 'q21', '7': 'q21', '8': 'q21', '9': 'q21', '0': 'q21', ';': 'q20'},
        'q20': {},
        'q21': {'_': 'q23', 'a': 'q23', 'b': 'q23', 'c': 'q23', 'd': 'q23', 'e': 'q23', 'f': 'q23', 'g': 'q23', 'h': 'q23', 'i': 'q23', 'j': 'q23', 'k': 'q23', 'l': 'q23', 'm': 'q23', 'n': 'q23', 'o': 'q23', 'p': 'q23', 'q': 'q23', 'r': 'q23', 's': 'q23', 't': 'q23', 'u': 'q23', 'v': 'q23', 'w': 'q23', 'x': 'q23', 'y': 'q23', 'z': 'q23', 'A': 'q23', 'B': 'q23', 'C': 'q23', 'D': 'q23', 'E': 'q23', 'F': 'q23', 'G': 'q23', 'H': 'q23', 'I': 'q23', 'J': 'q23', 'K': 'q23', 'L': 'q23', 'M': 'q23', 'N': 'q23', 'O': 'q23', 'P': 'q23', 'Q': 'q23', 'R': 'q23', 'S': 'q23', 'T': 'q23', 'U': 'q23', 'V': 'q23', 'W': 'q23', 'X': 'q23', 'Y': 'q23', 'Z': 'q23', '1': 'q23', '2': 'q23', '3': 'q23', '4': 'q23', '5': 'q23', '6': 'q23', '7': 'q23', '8': 'q23', '9': 'q23', '0': 'q23', ';': 'q22'},
        'q22': {},
        'q23': {'_': 'q25', 'a': 'q25', 'b': 'q25', 'c': 'q25', 'd': 'q25', 'e': 'q25', 'f': 'q25', 'g': 'q25', 'h': 'q25', 'i': 'q25', 'j': 'q25', 'k': 'q25', 'l': 'q25', 'm': 'q25', 'n': 'q25', 'o': 'q25', 'p': 'q25', 'q': 'q25', 'r': 'q25', 's': 'q25', 't': 'q25', 'u': 'q25', 'v': 'q25', 'w': 'q25', 'x': 'q25', 'y': 'q25', 'z': 'q25', 'A': 'q25', 'B': 'q25', 'C': 'q25', 'D': 'q25', 'E': 'q25', 'F': 'q25', 'G': 'q25', 'H': 'q25', 'I': 'q25', 'J': 'q25', 'K': 'q25', 'L': 'q25', 'M': 'q25', 'N': 'q25', 'O': 'q25', 'P': 'q25', 'Q': 'q25', 'R': 'q25', 'S': 'q25', 'T': 'q25', 'U': 'q25', 'V': 'q25', 'W': 'q25', 'X': 'q25', 'Y': 'q25', 'Z': 'q25', '1': 'q25', '2': 'q25', '3': 'q25', '4': 'q25', '5': 'q25', '6': 'q25', '7': 'q25', '8': 'q25', '9': 'q25', '0': 'q25', ';': 'q24'},
        'q24': {},
        'q25': {'_': 'q27', 'a': 'q27', 'b': 'q27', 'c': 'q27', 'd': 'q27', 'e': 'q27', 'f': 'q27', 'g': 'q27', 'h': 'q27', 'i': 'q27', 'j': 'q27', 'k': 'q27', 'l': 'q27', 'm': 'q27', 'n': 'q27', 'o': 'q27', 'p': 'q27', 'q': 'q27', 'r': 'q27', 's': 'q27', 't': 'q27', 'u': 'q27', 'v': 'q27', 'w': 'q27', 'x': 'q27', 'y': 'q27', 'z': 'q27', 'A': 'q27', 'B': 'q27', 'C': 'q27', 'D': 'q27', 'E': 'q27', 'F': 'q27', 'G': 'q27', 'H': 'q27', 'I': 'q27', 'J': 'q27', 'K': 'q27', 'L': 'q27', 'M': 'q27', 'N': 'q27', 'O': 'q27', 'P': 'q27', 'Q': 'q27', 'R': 'q27', 'S': 'q27', 'T': 'q27', 'U': 'q27', 'V': 'q27', 'W': 'q27', 'X': 'q27', 'Y': 'q27', 'Z': 'q27', '1': 'q27', '2': 'q27', '3': 'q27', '4': 'q27', '5': 'q27', '6': 'q27', '7': 'q27', '8': 'q27', '9': 'q27', '0': 'q27', ';': 'q26'},
        'q26': {},
        'q27': {'_': 'q29', 'a': 'q29', 'b': 'q29', 'c': 'q29', 'd': 'q29', 'e': 'q29', 'f': 'q29', 'g': 'q29', 'h': 'q29', 'i': 'q29', 'j': 'q29', 'k': 'q29', 'l': 'q29', 'm': 'q29', 'n': 'q29', 'o': 'q29', 'p': 'q29', 'q': 'q29', 'r': 'q29', 's': 'q29', 't': 'q29', 'u': 'q29', 'v': 'q29', 'w': 'q29', 'x': 'q29', 'y': 'q29', 'z': 'q29', 'A': 'q29', 'B': 'q29', 'C': 'q29', 'D': 'q29', 'E': 'q29', 'F': 'q29', 'G': 'q29', 'H': 'q29', 'I': 'q29', 'J': 'q29', 'K': 'q29', 'L': 'q29', 'M': 'q29', 'N': 'q29', 'O': 'q29', 'P': 'q29', 'Q': 'q29', 'R': 'q29', 'S': 'q29', 'T': 'q29', 'U': 'q29', 'V': 'q29', 'W': 'q29', 'X': 'q29', 'Y': 'q29', 'Z': 'q29', '1': 'q29', '2': 'q29', '3': 'q29', '4': 'q29', '5': 'q29', '6': 'q29', '7': 'q29', '8': 'q29', '9': 'q29', '0': 'q29', ';': 'q28'},
        'q28': {},
        'q29': {'_': 'q31', 'a': 'q31', 'b': 'q31', 'c': 'q31', 'd': 'q31', 'e': 'q31', 'f': 'q31', 'g': 'q31', 'h': 'q31', 'i': 'q31', 'j': 'q31', 'k': 'q31', 'l': 'q31', 'm': 'q31', 'n': 'q31', 'o': 'q31', 'p': 'q31', 'q': 'q31', 'r': 'q31', 's': 'q31', 't': 'q31', 'u': 'q31', 'v': 'q31', 'w': 'q31', 'x': 'q31', 'y': 'q31', 'z': 'q31', 'A': 'q31', 'B': 'q31', 'C': 'q31', 'D': 'q31', 'E': 'q31', 'F': 'q31', 'G': 'q31', 'H': 'q31', 'I': 'q31', 'J': 'q31', 'K': 'q31', 'L': 'q31', 'M': 'q31', 'N': 'q31', 'O': 'q31', 'P': 'q31', 'Q': 'q31', 'R': 'q31', 'S': 'q31', 'T': 'q31', 'U': 'q31', 'V': 'q31', 'W': 'q31', 'X': 'q31', 'Y': 'q31', 'Z': 'q31', '1': 'q31', '2': 'q31', '3': 'q31', '4': 'q31', '5': 'q31', '6': 'q31', '7': 'q31', '8': 'q31', '9': 'q31', '0': 'q31', ';': 'q30'},
        'q30': {},
        'q31': {'_': 'q33', 'a': 'q33', 'b': 'q33', 'c': 'q33', 'd': 'q33', 'e': 'q33', 'f': 'q33', 'g': 'q33', 'h': 'q33', 'i': 'q33', 'j': 'q33', 'k': 'q33', 'l': 'q33', 'm': 'q33', 'n': 'q33', 'o': 'q33', 'p': 'q33', 'q': 'q33', 'r': 'q33', 's': 'q33', 't': 'q33', 'u': 'q33', 'v': 'q33', 'w': 'q33', 'x': 'q33', 'y': 'q33', 'z': 'q33', 'A': 'q33', 'B': 'q33', 'C': 'q33', 'D': 'q33', 'E': 'q33', 'F': 'q33', 'G': 'q33', 'H': 'q33', 'I': 'q33', 'J': 'q33', 'K': 'q33', 'L': 'q33', 'M': 'q33', 'N': 'q33', 'O': 'q33', 'P': 'q33', 'Q': 'q33', 'R': 'q33', 'S': 'q33', 'T': 'q33', 'U': 'q33', 'V': 'q33', 'W': 'q33', 'X': 'q33', 'Y': 'q33', 'Z': 'q33', '1': 'q33', '2': 'q33', '3': 'q33', '4': 'q33', '5': 'q33', '6': 'q33', '7': 'q33', '8': 'q33', '9': 'q33', '0': 'q33', ';': 'q32'},
        'q32': {},
        'q33': {'_': 'q35', 'a': 'q35', 'b': 'q35', 'c': 'q35', 'd': 'q35', 'e': 'q35', 'f': 'q35', 'g': 'q35', 'h': 'q35', 'i': 'q35', 'j': 'q35', 'k': 'q35', 'l': 'q35', 'm': 'q35', 'n': 'q35', 'o': 'q35', 'p': 'q35', 'q': 'q35', 'r': 'q35', 's': 'q35', 't': 'q35', 'u': 'q35', 'v': 'q35', 'w': 'q35', 'x': 'q35', 'y': 'q35', 'z': 'q35', 'A': 'q35', 'B': 'q35', 'C': 'q35', 'D': 'q35', 'E': 'q35', 'F': 'q35', 'G': 'q35', 'H': 'q35', 'I': 'q35', 'J': 'q35', 'K': 'q35', 'L': 'q35', 'M': 'q35', 'N': 'q35', 'O': 'q35', 'P': 'q35', 'Q': 'q35', 'R': 'q35', 'S': 'q35', 'T': 'q35', 'U': 'q35', 'V': 'q35', 'W': 'q35', 'X': 'q35', 'Y': 'q35', 'Z': 'q35', '1': 'q35', '2': 'q35', '3': 'q35', '4': 'q35', '5': 'q35', '6': 'q35', '7': 'q35', '8': 'q35', '9': 'q35', '0': 'q35', ';': 'q34'},
        'q34': {},
        'q35': {'_': 'q37', 'a': 'q37', 'b': 'q37', 'c': 'q37', 'd': 'q37', 'e': 'q37', 'f': 'q37', 'g': 'q37', 'h': 'q37', 'i': 'q37', 'j': 'q37', 'k': 'q37', 'l': 'q37', 'm': 'q37', 'n': 'q37', 'o': 'q37', 'p': 'q37', 'q': 'q37', 'r': 'q37', 's': 'q37', 't': 'q37', 'u': 'q37', 'v': 'q37', 'w': 'q37', 'x': 'q37', 'y': 'q37', 'z': 'q37', 'A': 'q37', 'B': 'q37', 'C': 'q37', 'D': 'q37', 'E': 'q37', 'F': 'q37', 'G': 'q37', 'H': 'q37', 'I': 'q37', 'J': 'q37', 'K': 'q37', 'L': 'q37', 'M': 'q37', 'N': 'q37', 'O': 'q37', 'P': 'q37', 'Q': 'q37', 'R': 'q37', 'S': 'q37', 'T': 'q37', 'U': 'q37', 'V': 'q37', 'W': 'q37', 'X': 'q37', 'Y': 'q37', 'Z': 'q37', '1': 'q37', '2': 'q37', '3': 'q37', '4': 'q37', '5': 'q37', '6': 'q37', '7': 'q37', '8': 'q37', '9': 'q37', '0': 'q37', ';': 'q36'},
        'q36': {},
        'q37': {'_': 'q39', 'a': 'q39', 'b': 'q39', 'c': 'q39', 'd': 'q39', 'e': 'q39', 'f': 'q39', 'g': 'q39', 'h': 'q39', 'i': 'q39', 'j': 'q39', 'k': 'q39', 'l': 'q39', 'm': 'q39', 'n': 'q39', 'o': 'q39', 'p': 'q39', 'q': 'q39', 'r': 'q39', 's': 'q39', 't': 'q39', 'u': 'q39', 'v': 'q39', 'w': 'q39', 'x': 'q39', 'y': 'q39', 'z': 'q39', 'A': 'q39', 'B': 'q39', 'C': 'q39', 'D': 'q39', 'E': 'q39', 'F': 'q39', 'G': 'q39', 'H': 'q39', 'I': 'q39', 'J': 'q39', 'K': 'q39', 'L': 'q39', 'M': 'q39', 'N': 'q39', 'O': 'q39', 'P': 'q39', 'Q': 'q39', 'R': 'q39', 'S': 'q39', 'T': 'q39', 'U': 'q39', 'V': 'q39', 'W': 'q39', 'X': 'q39', 'Y': 'q39', 'Z': 'q39', '1': 'q39', '2': 'q39', '3': 'q39', '4': 'q39', '5': 'q39', '6': 'q39', '7': 'q39', '8': 'q39', '9': 'q39', '0': 'q39', ';': 'q38'},
        'q38': {},
        'q39': {},
        'q40': {}
    },
    initial_state='q0',
    final_states={'q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9', 'q10', 'q11', 'q12', 'q13', 'q14', 'q15', 'q16', 'q17', 'q18', 'q19', 'q20', 'q21', 'q22', 'q23', 'q24', 'q25', 'q26', 'q27', 'q28', 'q29', 'q30', 'q31', 'q32', 'q33', 'q34', 'q35', 'q36', 'q37', 'q38', 'q39', 'q40'}
)



def getOperaciones():
    root = tk.Tk()
    T = tk.Text(root, height=100, width=150, bg="black", fg="white", font=("Arial", 12, "bold"))
    T.pack()
    T.insert(tk.END, "------------------------------------Resultados:------------------------------------ \n")
    array = getDataTxt()
    for array1 in range(len(array)):
        c = array1
        valorAceptado = dfaValor.accepts_input(array[c])
        if valorAceptado == True:
            identificador = dfaIdentificador.accepts_input(array[c+1])
            valorReservado = dfaResevadas.accepts_input(array[c+1])
            if valorReservado == True:
                print(array[c+1] +" Es una palabra reservada")
                T.insert(tk.END, array[c+1] +" Es una palabra reservada \n" )
            elif identificador == True:
                print(array[c+1] + " Es un identificador valido")
                T.insert(tk.END, array[c+1] + " Es un identificador valido \n")
                T.insert(tk.END, " Practicas recomendadas: \n")
                for t in getPracticas():
                    if len(array[c+1]) == len(t):
                        T.insert(tk.END, t + "\n")

            else:
                print(array[c+1] + " No cumple con las reglas propuestas de un identificador \n")
                T.insert(tk.END, array[c+1] + " No cumple con las reglas propuestas de un identificador \n" )


            

        

# def pruebas():
#     root = tk.Tk()
#     T = tk.Text(root, height=100, width=150, bg="black", fg="white", font=("Arial", 12, "bold"))
#     T.pack()
#     T.insert(tk.END,"Se debe seguir la estructura int variable; o int variable = 0; donde int puede ser cualquier tipo basico y variable puede ser cualquier palabra, para ser considerada dentro del programa debe terminar con ; \n" )
#     T.insert(tk.END,"Una declaracion para ser considerada correcta debe cumplir con las reglas establecidas en el automata y no caer dentro de una palabra reservada, el apartado de mejores practicas es para buscar las mejores formas de declarar variables, tomando en cuenta su longitud y las palabras utilizadas \n" )
#     T.insert(tk.END,"----------------------------------------- \n " )
#     for c in getDeclarations():
#         if dfa.accepts_input(c):
#             print(c + ' cumple con las reglas establecidas')
#             T.insert(tk.END, c + " sigue todas las reglas establecidas \n" )
            
#         else:
#             print(c + ' no cumple con las reglas establecidas')
#             T.insert(tk.END, c + " No sigue todas las reglas establecidas \n" )

#         for x in getReservados():
#             if c == x:
#                 print(c + ' es una palabra reservada')
#                 T.insert(tk.END, c + ' es una palabra reservada \n' )   
#         print("Las mejores practicas para la declaracion de " + c + " son:")
#         T.insert(tk.END, "Las mejores practicas para la declaracion de " + c + " son: \n" )
#         for x in getPracticas():
#             if len(c) == len(x):
#                 T.insert(tk.END,  x + '\n')    
#                 print(x )   
#         T.insert(tk.END,"----------------------------------------- \n " )

if __name__ == "__main__":
    ventana = tk.Tk()
    ventana.geometry("500x500")
    ventana.title("Analizador de Declaraciones")
    tk.Button(
        ventana,
        pady=10,
        text="Seleccionar archivo txt",
        fg="black",
        bg="white",
        justify="center",
        command=getOperaciones,
    ).pack(
        side="top",
    )
    ventana.mainloop()
